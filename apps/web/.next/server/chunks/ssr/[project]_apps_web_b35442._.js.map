{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/apps/web/components/BibleSelect.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useState } from 'react';\nimport dotenv from 'dotenv';\nimport * as RadixSelect from '@radix-ui/react-select';\nimport {\n  SelectItem,\n  SelectGroup,\n  SelectLabel,\n  SelectSeparator,\n} from '@bibleio/design';\n\ndotenv.config();\n\ninterface Bible {\n  id: string;\n  name: string;\n  abbreviation: string;\n  description: string;\n}\n\nconst apiKey = process.env.API_KEY;\n\nconsole.log(apiKey);\n\nexport default function BibleSelect() {\n  const [bibles, setBibles] = useState<Bible[]>([]);\n  const [error, setError] = useState<Error>();\n\n  useEffect(() => {\n    async function getBibles() {\n      try {\n        const response = await fetch(\n          'https://bible.helloao.org/api/available_translations.json'\n        );\n        if (!response.ok) {\n          throw new Error(`HTTP error: Status ${response.status}`);\n        }\n        const data = await response.json();\n        setBibles(data.translations);\n      } catch (err) {\n        if (err instanceof Error) {\n          setError(err);\n        }\n      }\n    }\n    getBibles();\n  }, []);\n\n  if (!bibles) return <p className=\"text-body\">Loading Bibles...</p>;\n  if (error) return <p className=\"text-body text-dark-red\">{error.message}</p>;\n  if (bibles)\n    return (\n      <RadixSelect.Root>\n        <RadixSelect.Trigger>\n          <h4 className=\"text-h4\">Bible</h4>\n        </RadixSelect.Trigger>\n        <RadixSelect.Portal>\n          <RadixSelect.Content></RadixSelect.Content>\n        </RadixSelect.Portal>\n      </RadixSelect.Root>\n    );\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;;;;;AAYA,yLAAA,CAAA,UAAM,CAAC,MAAM;AASb,MAAM,SAAS,QAAQ,GAAG,CAAC,OAAO;AAElC,QAAQ,GAAG,CAAC;AAEG,SAAS;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,8UAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAChD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,8UAAA,CAAA,WAAQ,AAAD;IAEjC,CAAA,GAAA,8UAAA,CAAA,YAAS,AAAD,EAAE;QACR,eAAe;YACb,IAAI;gBACF,MAAM,WAAW,MAAM,MACrB;gBAEF,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,IAAI,MAAM,CAAC,mBAAmB,EAAE,SAAS,MAAM,CAAC,CAAC;gBACzD;gBACA,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,UAAU,KAAK,YAAY;YAC7B,EAAE,OAAO,KAAK;gBACZ,IAAI,eAAe,OAAO;oBACxB,SAAS;gBACX;YACF;QACF;QACA;IACF,GAAG,EAAE;IAEL,IAAI,CAAC,QAAQ,qBAAO,uXAAC;QAAE,WAAU;kBAAY;;;;;;IAC7C,IAAI,OAAO,qBAAO,uXAAC;QAAE,WAAU;kBAA2B,MAAM,OAAO;;;;;;IACvE,IAAI,QACF,qBACE,uXAAC,0YAAY,IAAI;;0BACf,uXAAC,0YAAY,OAAO;0BAClB,cAAA,uXAAC;oBAAG,WAAU;8BAAU;;;;;;;;;;;0BAE1B,uXAAC,0YAAY,MAAM;0BACjB,cAAA,uXAAC,0YAAY,OAAO;;;;;;;;;;;;;;;;AAI9B"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}